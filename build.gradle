plugins {
    id 'java' // Javaプロジェクトとしてビルドするための基本的なプラグイン
    // id 'application' // ./gradlew runが使えるようになる
    id 'org.springframework.boot' version '3.4.5' // ./gradlew bootRunが使えるようになる
    id 'com.diffplug.spotless' version '6.25.0' // フォーマッター
}

// バージョンを書かずに依存関係を追加できるようにする
apply plugin: 'io.spring.dependency-management'

// プロジェクトのメタ情報
group = 'com.example'
version = '0.0.1'
sourceCompatibility = '21' //Javaのバージョン

// どのリポジトリから依存を取得するかを指定
repositories {
    mavenCentral()
}

// 依存関係
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // バリデーション（@Validや@NotBlankなど）
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok（ゲッター、セッターなどの自動生成）
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.8.8' // @Tagや@Operationを使うため

    // JPA（DB永続化）
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2（開発用DB）
    runtimeOnly 'com.h2database:h2'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // Lombokと一緒に使うために必要

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JUnit Jupiter（JUnit 5）
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

// Spotless（フォーマッター）の設定
spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

// 実行クラスのsrc/main/java/以降のパスを指定
// application {
//     mainClass = 'com.example.demo.Main'
// }
